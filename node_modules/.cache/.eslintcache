[{"/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/index.js":"1","/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/App.js":"2","/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/reportWebVitals.js":"3","/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/components/CartHeader.js":"4","/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/components/CartItems.js":"5","/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/components/CartFooter.js":"6","/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/components/CartItemComponent.js":"7","/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/components/AddItem.js":"8"},{"size":550,"mtime":1646733298792,"results":"9","hashOfConfig":"10"},{"size":2146,"mtime":1646735752224,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1646733298794,"results":"12","hashOfConfig":"10"},{"size":245,"mtime":1646733298792,"results":"13","hashOfConfig":"10"},{"size":1317,"mtime":1646733298792,"results":"14","hashOfConfig":"10"},{"size":251,"mtime":1646733298792,"results":"15","hashOfConfig":"10"},{"size":511,"mtime":1646733298792,"results":"16","hashOfConfig":"10"},{"size":1855,"mtime":1646733298792,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"daaz03",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/index.js",[],[],"/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/App.js",["47","48"],[],"\nimport React, { Component } from \"react\";\nimport './App.css';\nimport CartItems from './components/CartItems';\nimport CartHeader from './components/CartHeader';\nimport CartFooter from './components/CartFooter';\n\n\n\nclass App extends Component {\n  state = {\n    products:\n      [\n\n      ],\n    cartItemList:\n      [\n        {id: 0, product:{}, quantity: 0}\n      ]\n  }\n\n  async componentDidMount() {\n    const productsResponse = await fetch(`${process.env.REACT_APP_API_URL}/api/products`);\n    const productsJson = await productsResponse.json();\n    const itemsResponse = await fetch(`${process.env.REACT_APP_API_URL}/api/items`);\n    const itemsJson = await itemsResponse.json();\n    this.setState({\n      ...this.state,\n      products: productsJson,\n    });\n    \n\n    itemsJson.map((item, i) => {\n      item.key = i;\n      item.product = productsJson.find(\n        (product) => product.id === item.product_id\n      );\n    });\n\n    this.setState({\n      ...this.state,\n      cartItemList: itemsJson,\n    });\n\n  }\n\n  total = 0;\n\n  getTotal = (cart) => {\n    /* const total = cart.reduce((pv, cv) => { \n        pv += (parseInt(cv.product.priceInCents) * parseInt(cv.quantity))\n          }, 0);*/\n    var sum = 0;\n    for (var i = 0; i < cart.length; i++) {\n      sum += parseInt(cart[i].product.priceInCents) * parseInt(cart[i].quantity)\n\n    }\n\n    this.total = sum;\n\n  }\n\n  addItemToList = async (product) => {\n    \n\n    const fetchProduct = {\n      product_id: product.product.id,\n      quantity: product.quantity,\n      id: product.product.id\n    }\n\n   const response = await fetch(\"http://localhost:8082/api/items\", {\n      method:'POST',\n      body: JSON.stringify(fetchProduct),\n      \n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    })\n\n    this.setState({\n      cartItemList: [...this.state.cartItemList, product]\n    })\n\n  }\n\n  render() {\n    return (\n      <div>\n        <CartHeader />\n        <CartItems products={this.state} addItemToList={this.addItemToList} total={this.total} />\n        <CartFooter copyright=\"2016\" />\n\n      </div>\n    )\n  };\n\n\n}\n\nexport default App;\n","/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/reportWebVitals.js",[],[],"/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/components/CartHeader.js",["49"],[],"import React from \"react\";      \n\nconst CartHeader = () => {\n    return (\n        <nav className=\"navbar navbar-dark bg-primary\">\n        <a className=\"navbar-brand\" href=\"#\">Shopping Cart</a>\n        </nav>\n    )  \n}\n\nexport default CartHeader;","/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/components/CartItems.js",[],[],"/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/components/CartFooter.js",["50"],[],"import React from \"react\";\n\nconst CartFooter = ({copyright}) => {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\"#\"> &copy; {copyright}</a>\n        </nav>\n    )\n}\n\nexport default CartFooter;","/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/components/CartItemComponent.js",["51"],[],"import React from \"react\";\nimport CartItems from \"./CartItems\";\n\nconst priceToDollar = (cents) => `$${cents / 100}`\n\nconst CartItemComponent = ({product}) => (\n    <div className=\"list-group-item\">\n        <div className=\"row\">\n            <div className=\"col-md-8\">{product.product.name}</div>\n            <div className=\"col-md-2\">{priceToDollar(product.product.priceInCents)}</div>\n            <div className=\"col-md-2\">{product.quantity}</div>\n        </div>\n    </div>\n\n)\n\nexport default CartItemComponent;","/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/components/AddItem.js",["52"],[],"import React, { Component } from \"react\";\n\n\nexport default class AddItem extends React.Component {\n\n    state = {currentProduct:{}, currentQuantity: 0}\n\n    getObject = (e) => {\n        e.preventDefault();\n        console.log(\"My value is\", e.target.value)\n        const tempObject = JSON.parse(e.target.value)\n        this.setState({\n            currentProduct: tempObject  \n        })\n        \n\n    }\n\n    getQuantity = async(e) =>{\n        e.preventDefault();\n        await this.setState({[e.target.name] : e.target.value}) \n        console.log(this.state.currentQuantity)\n        \n    };\n\n    addProduct = (e) => {\n        e.preventDefault();\n        var tempProduct = {\n            \n            product: this.state.currentProduct,\n            quantity: this.state.currentQuantity\n        }\n        console.log(\"im about to submit\", tempProduct)\n        this.props.addItemToList(tempProduct)  \n    }\n\n    render() {\n        return (\n\n            <form>\n                <div className=\"mb-3\">\n                    <label className=\"form-label\">Quantity</label>\n                    <input className=\"form-control\" onChange={this.getQuantity} name=\"currentQuantity\"></input>\n                </div>\n                <div className=\"mb-3\">\n                    <label className=\"form-label\">Products</label>\n                    <select className=\"form-select\" aria-label=\"Default select example\" onChange={this.getObject} name=\"currentProduct\">\n                    <option value=\"\" disabled selected hidden>Choose a product...</option>\n                        {this.props.products.map( product => <option value={JSON.stringify(product)}>{product.name}</option>)}\n\n                    </select>\n                    <button className=\"btn btn-primary\" onClick={this.addProduct}>Submit</button>\n                </div>\n            </form>\n\n\n\n        )\n\n    };\n\n\n}",{"ruleId":"53","severity":1,"message":"54","line":33,"column":29,"nodeType":"55","messageId":"56","endLine":33,"endColumn":31},{"ruleId":"57","severity":1,"message":"58","line":72,"column":10,"nodeType":"59","messageId":"60","endLine":72,"endColumn":18},{"ruleId":"61","severity":1,"message":"62","line":6,"column":9,"nodeType":"63","endLine":6,"endColumn":46},{"ruleId":"61","severity":1,"message":"62","line":6,"column":9,"nodeType":"63","endLine":6,"endColumn":46},{"ruleId":"57","severity":1,"message":"64","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":17},{"ruleId":"57","severity":1,"message":"65","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'CartItems' is defined but never used.","'Component' is defined but never used."]