{"ast":null,"code":"var _jsxFileName = \"/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport CartItems from './components/CartItems';\nimport CartHeader from './components/CartHeader';\nimport CartFooter from './components/CartFooter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      products: [],\n      cartItemList: [{\n        id: 0,\n        product: {},\n        quantity: 0\n      }]\n    };\n    this.total = 0;\n\n    this.getTotal = cart => {\n      /* const total = cart.reduce((pv, cv) => { \n          pv += (parseInt(cv.product.priceInCents) * parseInt(cv.quantity))\n            }, 0);*/\n      var sum = 0;\n\n      for (var i = 0; i < cart.length; i++) {\n        sum += parseInt(cart[i].product.priceInCents) * parseInt(cart[i].quantity);\n      }\n\n      this.total = sum;\n    };\n\n    this.addItemToList = async product => {\n      const fetchProduct = {\n        product_id: product.product.id,\n        quantity: product.quantity,\n        id: product.product.id\n      };\n      const response = await fetch(\"http://localhost:8082/api/items\", {\n        method: 'POST',\n        body: JSON.stringify(fetchProduct),\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      this.setState({\n        cartItemList: [...this.state.cartItemList, product]\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const productsResponse = await fetch(\"http://localhost:8082/api/products\");\n    const productsJson = await productsResponse.json();\n    const itemsResponse = await fetch(\"http://localhost:8082/api/items\");\n    const itemsJson = await itemsResponse.json();\n    this.setState({ ...this.state,\n      products: productsJson\n    });\n    itemsJson.map((item, i) => {\n      item.key = i;\n      item.product = productsJson.find(product => product.id === item.product_id);\n    });\n    this.setState({ ...this.state,\n      cartItemList: itemsJson\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CartHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartItems, {\n        products: this.state,\n        addItemToList: this.addItemToList,\n        total: this.total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartFooter, {\n        copyright: \"2016\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/d1ade4u/react/git_my/myproject/shopping-cart/src/App.js"],"names":["React","Component","CartItems","CartHeader","CartFooter","App","state","products","cartItemList","id","product","quantity","total","getTotal","cart","sum","i","length","parseInt","priceInCents","addItemToList","fetchProduct","product_id","response","fetch","method","body","JSON","stringify","headers","setState","componentDidMount","productsResponse","productsJson","json","itemsResponse","itemsJson","map","item","key","find","render"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport './App.css';\nimport CartItems from './components/CartItems';\nimport CartHeader from './components/CartHeader';\nimport CartFooter from './components/CartFooter';\n\n\n\nclass App extends Component {\n  state = {\n    products:\n      [\n\n      ],\n    cartItemList:\n      [\n        {id: 0, product:{}, quantity: 0}\n      ]\n  }\n\n  async componentDidMount() {\n    const productsResponse = await fetch(\"http://localhost:8082/api/products\");\n    const productsJson = await productsResponse.json();\n    const itemsResponse = await fetch(\"http://localhost:8082/api/items\");\n    const itemsJson = await itemsResponse.json();\n    this.setState({\n      ...this.state,\n      products: productsJson,\n    });\n    \n\n    itemsJson.map((item, i) => {\n      item.key = i;\n      item.product = productsJson.find(\n        (product) => product.id === item.product_id\n      );\n    });\n\n    this.setState({\n      ...this.state,\n      cartItemList: itemsJson,\n    });\n\n  }\n\n  total = 0;\n\n  getTotal = (cart) => {\n    /* const total = cart.reduce((pv, cv) => { \n        pv += (parseInt(cv.product.priceInCents) * parseInt(cv.quantity))\n          }, 0);*/\n    var sum = 0;\n    for (var i = 0; i < cart.length; i++) {\n      sum += parseInt(cart[i].product.priceInCents) * parseInt(cart[i].quantity)\n\n    }\n\n    this.total = sum;\n\n  }\n\n  addItemToList = async (product) => {\n    \n\n    const fetchProduct = {\n      product_id: product.product.id,\n      quantity: product.quantity,\n      id: product.product.id\n    }\n\n   const response = await fetch(\"http://localhost:8082/api/items\", {\n      method:'POST',\n      body: JSON.stringify(fetchProduct),\n      \n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    })\n\n    this.setState({\n      cartItemList: [...this.state.cartItemList, product]\n    })\n\n  }\n\n  render() {\n    return (\n      <div>\n        <CartHeader />\n        <CartItems products={this.state} addItemToList={this.addItemToList} total={this.total} />\n        <CartFooter copyright=\"2016\" />\n\n      </div>\n    )\n  };\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}